{"format": "torch", "nodes": [{"name": "transforms.0", "id": 140056390730640, "class_name": "ActNormBijectionCloud()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.1", "id": 140056390730832, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.2", "id": 140056390730512, "class_name": "AffineCoupling(\n  (nn): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=4, bias=True)\n    (layers): ModuleList(\n      (0): Linear(in_features=2, out_features=2, bias=True)\n      (1): Linear(in_features=2, out_features=2, bias=True)\n    )\n  )\n)", "parameters": [["nn.in_layer.weight", [2, 2]], ["nn.in_layer.bias", [2]], ["nn.out_layer.weight", [4, 2]], ["nn.out_layer.bias", [4]], ["nn.layers.0.weight", [2, 2]], ["nn.layers.0.bias", [2]], ["nn.layers.1.weight", [2, 2]], ["nn.layers.1.bias", [2]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 2, 8, 4, 4, 2, 4, 2]}, {"name": "transforms.3", "id": 140056390730576, "class_name": "ActNormBijectionCloud()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.4", "id": 140056390659792, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.5", "id": 140056390659344, "class_name": "AffineCoupling(\n  (nn): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=4, bias=True)\n    (layers): ModuleList(\n      (0): Linear(in_features=2, out_features=2, bias=True)\n      (1): Linear(in_features=2, out_features=2, bias=True)\n    )\n  )\n)", "parameters": [["nn.in_layer.weight", [2, 2]], ["nn.in_layer.bias", [2]], ["nn.out_layer.weight", [4, 2]], ["nn.out_layer.bias", [4]], ["nn.layers.0.weight", [2, 2]], ["nn.layers.0.bias", [2]], ["nn.layers.1.weight", [2, 2]], ["nn.layers.1.bias", [2]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 2, 8, 4, 4, 2, 4, 2]}, {"name": "transforms.6", "id": 140056390659088, "class_name": "ActNormBijectionCloud()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.7", "id": 140056390658576, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.8", "id": 140056390658448, "class_name": "AffineCoupling(\n  (nn): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=4, bias=True)\n    (layers): ModuleList(\n      (0): Linear(in_features=2, out_features=2, bias=True)\n      (1): Linear(in_features=2, out_features=2, bias=True)\n    )\n  )\n)", "parameters": [["nn.in_layer.weight", [2, 2]], ["nn.in_layer.bias", [2]], ["nn.out_layer.weight", [4, 2]], ["nn.out_layer.bias", [4]], ["nn.layers.0.weight", [2, 2]], ["nn.layers.0.bias", [2]], ["nn.layers.1.weight", [2, 2]], ["nn.layers.1.bias", [2]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 2, 8, 4, 4, 2, 4, 2]}, {"name": "transforms.9", "id": 140056390659984, "class_name": "ActNormBijectionCloud()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.10", "id": 140056390658960, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.11", "id": 140056390657808, "class_name": "AffineCoupling(\n  (nn): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=4, bias=True)\n    (layers): ModuleList(\n      (0): Linear(in_features=2, out_features=2, bias=True)\n      (1): Linear(in_features=2, out_features=2, bias=True)\n    )\n  )\n)", "parameters": [["nn.in_layer.weight", [2, 2]], ["nn.in_layer.bias", [2]], ["nn.out_layer.weight", [4, 2]], ["nn.out_layer.bias", [4]], ["nn.layers.0.weight", [2, 2]], ["nn.layers.0.bias", [2]], ["nn.layers.1.weight", [2, 2]], ["nn.layers.1.bias", [2]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 2, 8, 4, 4, 2, 4, 2]}, {"name": "transforms.12", "id": 140056390776016, "class_name": "ActNormBijectionCloud()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.13", "id": 140056390776976, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.14", "id": 140056390777168, "class_name": "AffineCoupling(\n  (nn): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=4, bias=True)\n    (layers): ModuleList(\n      (0): Linear(in_features=2, out_features=2, bias=True)\n      (1): Linear(in_features=2, out_features=2, bias=True)\n    )\n  )\n)", "parameters": [["nn.in_layer.weight", [2, 2]], ["nn.in_layer.bias", [2]], ["nn.out_layer.weight", [4, 2]], ["nn.out_layer.bias", [4]], ["nn.layers.0.weight", [2, 2]], ["nn.layers.0.bias", [2]], ["nn.layers.1.weight", [2, 2]], ["nn.layers.1.bias", [2]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 2, 8, 4, 4, 2, 4, 2]}], "edges": []}