{"format": "torch", "nodes": [{"name": "transforms.0", "id": 139737191746576, "class_name": "AffineCoupling(\n  (nn_s): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=2, bias=True)\n    (layers): ModuleList()\n  )\n  (nn_t): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=2, bias=True)\n    (layers): ModuleList()\n  )\n)", "parameters": [["nn_s.in_layer.weight", [2, 2]], ["nn_s.in_layer.bias", [2]], ["nn_s.out_layer.weight", [2, 2]], ["nn_s.out_layer.bias", [2]], ["nn_t.in_layer.weight", [2, 2]], ["nn_t.in_layer.bias", [2]], ["nn_t.out_layer.weight", [2, 2]], ["nn_t.out_layer.bias", [2]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 2, 4, 2, 4, 2, 4, 2]}, {"name": "transforms.1", "id": 139737191746384, "class_name": "ActNormBijection()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.2", "id": 139737191747408, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.3", "id": 139737191746064, "class_name": "AffineCoupling(\n  (nn_s): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=2, bias=True)\n    (layers): ModuleList()\n  )\n  (nn_t): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=2, bias=True)\n    (layers): ModuleList()\n  )\n)", "parameters": [["nn_s.in_layer.weight", [2, 2]], ["nn_s.in_layer.bias", [2]], ["nn_s.out_layer.weight", [2, 2]], ["nn_s.out_layer.bias", [2]], ["nn_t.in_layer.weight", [2, 2]], ["nn_t.in_layer.bias", [2]], ["nn_t.out_layer.weight", [2, 2]], ["nn_t.out_layer.bias", [2]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 2, 4, 2, 4, 2, 4, 2]}, {"name": "transforms.4", "id": 139737191745104, "class_name": "ActNormBijection()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.5", "id": 139737191744336, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.6", "id": 139737191743568, "class_name": "AffineCoupling(\n  (nn_s): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=2, bias=True)\n    (layers): ModuleList()\n  )\n  (nn_t): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=2, bias=True)\n    (layers): ModuleList()\n  )\n)", "parameters": [["nn_s.in_layer.weight", [2, 2]], ["nn_s.in_layer.bias", [2]], ["nn_s.out_layer.weight", [2, 2]], ["nn_s.out_layer.bias", [2]], ["nn_t.in_layer.weight", [2, 2]], ["nn_t.in_layer.bias", [2]], ["nn_t.out_layer.weight", [2, 2]], ["nn_t.out_layer.bias", [2]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 2, 4, 2, 4, 2, 4, 2]}, {"name": "transforms.7", "id": 139737191745296, "class_name": "ActNormBijection()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.8", "id": 139737193020816, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.9", "id": 139737193021136, "class_name": "AffineCoupling(\n  (nn_s): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=2, bias=True)\n    (layers): ModuleList()\n  )\n  (nn_t): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=2, bias=True)\n    (layers): ModuleList()\n  )\n)", "parameters": [["nn_s.in_layer.weight", [2, 2]], ["nn_s.in_layer.bias", [2]], ["nn_s.out_layer.weight", [2, 2]], ["nn_s.out_layer.bias", [2]], ["nn_t.in_layer.weight", [2, 2]], ["nn_t.in_layer.bias", [2]], ["nn_t.out_layer.weight", [2, 2]], ["nn_t.out_layer.bias", [2]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 2, 4, 2, 4, 2, 4, 2]}, {"name": "transforms.10", "id": 139737190338832, "class_name": "ActNormBijection()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.11", "id": 139737190339408, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.12", "id": 139737190339600, "class_name": "AffineCoupling(\n  (nn_s): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=2, bias=True)\n    (layers): ModuleList()\n  )\n  (nn_t): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=2, bias=True)\n    (out_layer): Linear(in_features=2, out_features=2, bias=True)\n    (layers): ModuleList()\n  )\n)", "parameters": [["nn_s.in_layer.weight", [2, 2]], ["nn_s.in_layer.bias", [2]], ["nn_s.out_layer.weight", [2, 2]], ["nn_s.out_layer.bias", [2]], ["nn_t.in_layer.weight", [2, 2]], ["nn_t.in_layer.bias", [2]], ["nn_t.out_layer.weight", [2, 2]], ["nn_t.out_layer.bias", [2]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 2, 4, 2, 4, 2, 4, 2]}], "edges": []}