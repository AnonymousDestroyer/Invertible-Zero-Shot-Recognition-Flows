{"format": "torch", "nodes": [{"name": "transforms.0", "id": 139657211932240, "class_name": "AffineCoupling(\n  (nn): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=4, bias=True)\n    (out_layer): Linear(in_features=4, out_features=4, bias=True)\n    (layers): ModuleList(\n      (0): Linear(in_features=4, out_features=4, bias=True)\n      (1): Linear(in_features=4, out_features=4, bias=True)\n      (2): Linear(in_features=4, out_features=4, bias=True)\n      (3): Linear(in_features=4, out_features=4, bias=True)\n      (4): Linear(in_features=4, out_features=4, bias=True)\n      (5): Linear(in_features=4, out_features=4, bias=True)\n      (6): Linear(in_features=4, out_features=4, bias=True)\n      (7): Linear(in_features=4, out_features=4, bias=True)\n      (8): Linear(in_features=4, out_features=4, bias=True)\n    )\n  )\n)", "parameters": [["nn.in_layer.weight", [4, 2]], ["nn.in_layer.bias", [4]], ["nn.out_layer.weight", [4, 4]], ["nn.out_layer.bias", [4]], ["nn.layers.0.weight", [4, 4]], ["nn.layers.0.bias", [4]], ["nn.layers.1.weight", [4, 4]], ["nn.layers.1.bias", [4]], ["nn.layers.2.weight", [4, 4]], ["nn.layers.2.bias", [4]], ["nn.layers.3.weight", [4, 4]], ["nn.layers.3.bias", [4]], ["nn.layers.4.weight", [4, 4]], ["nn.layers.4.bias", [4]], ["nn.layers.5.weight", [4, 4]], ["nn.layers.5.bias", [4]], ["nn.layers.6.weight", [4, 4]], ["nn.layers.6.bias", [4]], ["nn.layers.7.weight", [4, 4]], ["nn.layers.7.bias", [4]], ["nn.layers.8.weight", [4, 4]], ["nn.layers.8.bias", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [8, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4]}, {"name": "transforms.1", "id": 139657211931856, "class_name": "ActNormBijection()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.2", "id": 139657211986192, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.3", "id": 139659333501008, "class_name": "AffineCoupling(\n  (nn): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=4, bias=True)\n    (out_layer): Linear(in_features=4, out_features=4, bias=True)\n    (layers): ModuleList(\n      (0): Linear(in_features=4, out_features=4, bias=True)\n      (1): Linear(in_features=4, out_features=4, bias=True)\n      (2): Linear(in_features=4, out_features=4, bias=True)\n      (3): Linear(in_features=4, out_features=4, bias=True)\n      (4): Linear(in_features=4, out_features=4, bias=True)\n      (5): Linear(in_features=4, out_features=4, bias=True)\n      (6): Linear(in_features=4, out_features=4, bias=True)\n      (7): Linear(in_features=4, out_features=4, bias=True)\n      (8): Linear(in_features=4, out_features=4, bias=True)\n    )\n  )\n)", "parameters": [["nn.in_layer.weight", [4, 2]], ["nn.in_layer.bias", [4]], ["nn.out_layer.weight", [4, 4]], ["nn.out_layer.bias", [4]], ["nn.layers.0.weight", [4, 4]], ["nn.layers.0.bias", [4]], ["nn.layers.1.weight", [4, 4]], ["nn.layers.1.bias", [4]], ["nn.layers.2.weight", [4, 4]], ["nn.layers.2.bias", [4]], ["nn.layers.3.weight", [4, 4]], ["nn.layers.3.bias", [4]], ["nn.layers.4.weight", [4, 4]], ["nn.layers.4.bias", [4]], ["nn.layers.5.weight", [4, 4]], ["nn.layers.5.bias", [4]], ["nn.layers.6.weight", [4, 4]], ["nn.layers.6.bias", [4]], ["nn.layers.7.weight", [4, 4]], ["nn.layers.7.bias", [4]], ["nn.layers.8.weight", [4, 4]], ["nn.layers.8.bias", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [8, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4]}, {"name": "transforms.4", "id": 139659333501136, "class_name": "ActNormBijection()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.5", "id": 139659333503568, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.6", "id": 139659333503760, "class_name": "AffineCoupling(\n  (nn): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=4, bias=True)\n    (out_layer): Linear(in_features=4, out_features=4, bias=True)\n    (layers): ModuleList(\n      (0): Linear(in_features=4, out_features=4, bias=True)\n      (1): Linear(in_features=4, out_features=4, bias=True)\n      (2): Linear(in_features=4, out_features=4, bias=True)\n      (3): Linear(in_features=4, out_features=4, bias=True)\n      (4): Linear(in_features=4, out_features=4, bias=True)\n      (5): Linear(in_features=4, out_features=4, bias=True)\n      (6): Linear(in_features=4, out_features=4, bias=True)\n      (7): Linear(in_features=4, out_features=4, bias=True)\n      (8): Linear(in_features=4, out_features=4, bias=True)\n    )\n  )\n)", "parameters": [["nn.in_layer.weight", [4, 2]], ["nn.in_layer.bias", [4]], ["nn.out_layer.weight", [4, 4]], ["nn.out_layer.bias", [4]], ["nn.layers.0.weight", [4, 4]], ["nn.layers.0.bias", [4]], ["nn.layers.1.weight", [4, 4]], ["nn.layers.1.bias", [4]], ["nn.layers.2.weight", [4, 4]], ["nn.layers.2.bias", [4]], ["nn.layers.3.weight", [4, 4]], ["nn.layers.3.bias", [4]], ["nn.layers.4.weight", [4, 4]], ["nn.layers.4.bias", [4]], ["nn.layers.5.weight", [4, 4]], ["nn.layers.5.bias", [4]], ["nn.layers.6.weight", [4, 4]], ["nn.layers.6.bias", [4]], ["nn.layers.7.weight", [4, 4]], ["nn.layers.7.bias", [4]], ["nn.layers.8.weight", [4, 4]], ["nn.layers.8.bias", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [8, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4]}, {"name": "transforms.7", "id": 139659333503888, "class_name": "ActNormBijection()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.8", "id": 139659333063952, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.9", "id": 139659333064016, "class_name": "AffineCoupling(\n  (nn): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=4, bias=True)\n    (out_layer): Linear(in_features=4, out_features=4, bias=True)\n    (layers): ModuleList(\n      (0): Linear(in_features=4, out_features=4, bias=True)\n      (1): Linear(in_features=4, out_features=4, bias=True)\n      (2): Linear(in_features=4, out_features=4, bias=True)\n      (3): Linear(in_features=4, out_features=4, bias=True)\n      (4): Linear(in_features=4, out_features=4, bias=True)\n      (5): Linear(in_features=4, out_features=4, bias=True)\n      (6): Linear(in_features=4, out_features=4, bias=True)\n      (7): Linear(in_features=4, out_features=4, bias=True)\n      (8): Linear(in_features=4, out_features=4, bias=True)\n    )\n  )\n)", "parameters": [["nn.in_layer.weight", [4, 2]], ["nn.in_layer.bias", [4]], ["nn.out_layer.weight", [4, 4]], ["nn.out_layer.bias", [4]], ["nn.layers.0.weight", [4, 4]], ["nn.layers.0.bias", [4]], ["nn.layers.1.weight", [4, 4]], ["nn.layers.1.bias", [4]], ["nn.layers.2.weight", [4, 4]], ["nn.layers.2.bias", [4]], ["nn.layers.3.weight", [4, 4]], ["nn.layers.3.bias", [4]], ["nn.layers.4.weight", [4, 4]], ["nn.layers.4.bias", [4]], ["nn.layers.5.weight", [4, 4]], ["nn.layers.5.bias", [4]], ["nn.layers.6.weight", [4, 4]], ["nn.layers.6.bias", [4]], ["nn.layers.7.weight", [4, 4]], ["nn.layers.7.bias", [4]], ["nn.layers.8.weight", [4, 4]], ["nn.layers.8.bias", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [8, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4]}, {"name": "transforms.10", "id": 139659333064208, "class_name": "ActNormBijection()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.11", "id": 139659333066576, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.12", "id": 139659333156944, "class_name": "AffineCoupling(\n  (nn): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=4, bias=True)\n    (out_layer): Linear(in_features=4, out_features=4, bias=True)\n    (layers): ModuleList(\n      (0): Linear(in_features=4, out_features=4, bias=True)\n      (1): Linear(in_features=4, out_features=4, bias=True)\n      (2): Linear(in_features=4, out_features=4, bias=True)\n      (3): Linear(in_features=4, out_features=4, bias=True)\n      (4): Linear(in_features=4, out_features=4, bias=True)\n      (5): Linear(in_features=4, out_features=4, bias=True)\n      (6): Linear(in_features=4, out_features=4, bias=True)\n      (7): Linear(in_features=4, out_features=4, bias=True)\n      (8): Linear(in_features=4, out_features=4, bias=True)\n    )\n  )\n)", "parameters": [["nn.in_layer.weight", [4, 2]], ["nn.in_layer.bias", [4]], ["nn.out_layer.weight", [4, 4]], ["nn.out_layer.bias", [4]], ["nn.layers.0.weight", [4, 4]], ["nn.layers.0.bias", [4]], ["nn.layers.1.weight", [4, 4]], ["nn.layers.1.bias", [4]], ["nn.layers.2.weight", [4, 4]], ["nn.layers.2.bias", [4]], ["nn.layers.3.weight", [4, 4]], ["nn.layers.3.bias", [4]], ["nn.layers.4.weight", [4, 4]], ["nn.layers.4.bias", [4]], ["nn.layers.5.weight", [4, 4]], ["nn.layers.5.bias", [4]], ["nn.layers.6.weight", [4, 4]], ["nn.layers.6.bias", [4]], ["nn.layers.7.weight", [4, 4]], ["nn.layers.7.bias", [4]], ["nn.layers.8.weight", [4, 4]], ["nn.layers.8.bias", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [8, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4]}, {"name": "transforms.13", "id": 139659333157072, "class_name": "ActNormBijection()", "parameters": [["shift", [1, 4]], ["log_scale", [1, 4]]], "output_shape": [[256, 4], [256]], "num_parameters": [4, 4]}, {"name": "transforms.14", "id": 139659333159440, "class_name": "LinearLU()", "parameters": [["lower_entries", [6]], ["upper_entries", [6]], ["unconstrained_upper_diag", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [6, 6, 4]}, {"name": "transforms.15", "id": 139659333159632, "class_name": "AffineCoupling(\n  (nn): MLP(\n    (non_linearity): LeakyReLU(negative_slope=0.01)\n    (in_layer): Linear(in_features=2, out_features=4, bias=True)\n    (out_layer): Linear(in_features=4, out_features=4, bias=True)\n    (layers): ModuleList(\n      (0): Linear(in_features=4, out_features=4, bias=True)\n      (1): Linear(in_features=4, out_features=4, bias=True)\n      (2): Linear(in_features=4, out_features=4, bias=True)\n      (3): Linear(in_features=4, out_features=4, bias=True)\n      (4): Linear(in_features=4, out_features=4, bias=True)\n      (5): Linear(in_features=4, out_features=4, bias=True)\n      (6): Linear(in_features=4, out_features=4, bias=True)\n      (7): Linear(in_features=4, out_features=4, bias=True)\n      (8): Linear(in_features=4, out_features=4, bias=True)\n    )\n  )\n)", "parameters": [["nn.in_layer.weight", [4, 2]], ["nn.in_layer.bias", [4]], ["nn.out_layer.weight", [4, 4]], ["nn.out_layer.bias", [4]], ["nn.layers.0.weight", [4, 4]], ["nn.layers.0.bias", [4]], ["nn.layers.1.weight", [4, 4]], ["nn.layers.1.bias", [4]], ["nn.layers.2.weight", [4, 4]], ["nn.layers.2.bias", [4]], ["nn.layers.3.weight", [4, 4]], ["nn.layers.3.bias", [4]], ["nn.layers.4.weight", [4, 4]], ["nn.layers.4.bias", [4]], ["nn.layers.5.weight", [4, 4]], ["nn.layers.5.bias", [4]], ["nn.layers.6.weight", [4, 4]], ["nn.layers.6.bias", [4]], ["nn.layers.7.weight", [4, 4]], ["nn.layers.7.bias", [4]], ["nn.layers.8.weight", [4, 4]], ["nn.layers.8.bias", [4]]], "output_shape": [[256, 4], [256]], "num_parameters": [8, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4, 16, 4]}], "edges": []}